name: Docker Publish

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set IMAGE_ID environment variable
        run: echo "IMAGE_ID=ghcr.io/${{ github.repository_owner }}/youtube-dl:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build Image
        run: docker build --tag $IMAGE_ID - < Dockerfile

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push image
        run: docker push $IMAGE_ID

  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Publish image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/youtube-dl

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker pull $IMAGE_ID:${{ github.sha }}
          docker tag $IMAGE_ID:${{ github.sha }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
